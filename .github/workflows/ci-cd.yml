name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Change to a Linux-based runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: List files
      run: Get-ChildItem -Recurse  # Correct command for PowerShell

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'  # Adjust to match your project .NET version

    - name: Restore dependencies
      run: dotnet restore MonitoringService/MonitoringService.csproj

    - name: Build project
      run: dotnet build MonitoringService/MonitoringService.csproj --no-restore
    
    # There is no test project so this is not necessary
    #- name: Run tests
    #  run: dotnet test ./MonitoringService.csproj --no-restore

  dockerize:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/monitoring-system:latest -f MonitoringService/Dockerfile .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/monitoring-system:latest

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/monitoring-system:latest
          docker stop monitoring-system || true
          docker rm monitoring-system || true
          docker run -d --name monitoring-system -p 80:80 ${{ secrets.DOCKER_USERNAME }}/monitoring-system:latest
